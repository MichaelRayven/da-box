services:
  database:
    image: "postgres:15.7-alpine"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - postgres
      - -c
      - fsync=off
      - -c
      - synchronous_commit=off
      - -c
      - full_page_writes=off
      - -c
      - bgwriter_lru_maxpages=0
      - -c
      - random_page_cost=1.0
      - -c
      - log_min_duration_statement=0
      - -c
      - log_statement=all
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: "test_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Web console
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-client:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set local http://minio:9000 admin admin123;
        mc mb -p local/avatar-bucket;
        mc mb -p local/file-bucket;
        mc anonymous set download local/avatar-bucket;
        mc anonymous set none local/file-bucket;
        exit 0;
      "
    # This runs once to create a bucket and set permissions

volumes:
  postgres_data:
  minio_data:
